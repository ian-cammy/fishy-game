local function change_move_vector(self)
	local p = go.get_position()
	math.randomseed(socket.gettime())

-- -- 	local xmin = p.x < 200 and 0 or -5
-- -- 	local xmax = p.x > 1100 and 0 or 5
-- -- 
-- -- 	local ymin = p.y < 150 and 0 or -3
-- -- 	local ymax = p.y > 550 and 0 or 3
-- -- 
-- -- 	self.move_vector.x = math.random(xmin, xmax)
-- -- 	self.move_vector.y = math.random(ymin, ymax)
-- 
-- 	local xmin = p.x < 200 and 0 or -1
-- 	local xmax = p.x > 1100 and 0 or 1
-- 
-- 	local ymin = p.y < 150 and 0 or -1
-- 	local ymax = p.y > 550 and 0 or 1
-- 
-- 	repeat
-- 		self.move_vector.x = math.random(xmin, xmax) * math.random(4, 10)
-- 		self.move_vector.y = math.random(ymin, ymax) * math.random(4, 10)
-- 	until self.move_vector.x ~= 0 and self.move_vector.y ~= 0

	local xmin = p.x < 200 and 0 or -1
	local xmax = p.x > 1100 and 0 or 1

	local ymin = p.y < 150 and 0 or -1
	local ymax = p.y > 610 and 0 or 1

	repeat
		self.move_vector.x = math.random(xmin, xmax) * math.random(4, 10)
		self.move_vector.y = math.random(ymin, ymax) * math.random(4, 10)
	until self.move_vector.x ~= 0 and self.move_vector.y ~= 0

	self.move_vector.z = math.random(30, 60)
	
	print("pos=", p, "; xmin/max=", xmin, "/", xmax, "; ymin/ymax=", ymin, "/", ymax, ";")
	print("move_vector=", self.move_vector)
	
	if self.move_vector.x > 0 then
		sprite.set_hflip("#sprite", true)
	elseif self.move_vector.x < 0 then
		sprite.set_hflip("#sprite", false)
	end
end

function init(self)
	self.move_vector = vmath.vector3()
	
	-- print("Fishy initialized")
	-- print("Fishy Size: ", go.get("#sprite", "size"))
	go.set("#sprite", "scale", vmath.vector3(0.5, 0.5, 0.5))
	-- print("Fish Scale: ", go.get("#sprite", "scale"))
	-- print("Background sprite scale: ", go.get("/background#sprite", "scale"))

	go.set("#sprite", "playback_rate", 1)

	-- self.move_vector.x = -350
	change_move_vector(self)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local p = go.get_position()

	if (p.x < 150 and self.move_vector.x < 0) or (p.x > 1152 and self.move_vector.x > 0) 
		or (p.y < 100 and self.move_vector.y < 0) or (p.y > 660 and self.move_vector.y > 0) then
		change_move_vector(self)
	end

	p.x = p.x + self.move_vector.x * self.move_vector.z * dt
	p.y = p.y + self.move_vector.y * self.move_vector.z * dt
	
	go.set_position(p)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
